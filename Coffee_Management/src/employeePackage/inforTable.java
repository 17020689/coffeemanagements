/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeePackage;
import model.*;



import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Admin
 */
public class inforTable extends javax.swing.JFrame {
public static String nameOfProductChoose= null;
//public static inforTable 

public  String productcodechoose;
public  int priceOfProduct;
public static int numberOfProduct;
public static int idTable;
public static order orderAdd;
public numberOfBill count;
public static ArrayList<products> productsList;
public static float amount;
public static enternumberProduct ep ;
    /**
     * Creates new form inforTable
     */
    public inforTable() {
       
        initComponents();
        clock();
        nameOfEmployee.setText(LogIn.saveUsernameString);
        timeStart.setText(getStartDate());
        loadProductInTable();
        loadDataInBill();
         nameOfTbale.setText(String.valueOf(EmployeeTask.idTable));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        findText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameOfTbale = new javax.swing.JTextField();
        nameOfEmployee = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        noteButton = new javax.swing.JButton();
        timeStart = new javax.swing.JTextField();
        timeNow = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        totalMoneyText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        discountText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        payments = new javax.swing.JTextField();
        paymentsButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên", "Đơn Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 78, 290, 460));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả", "Hoa Quả", "Đồ Uống" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 41, 290, -1));

        findText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findTextActionPerformed(evt);
            }
        });
        findText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                findTextKeyReleased(evt);
            }
        });
        getContentPane().add(findText, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jLabel2.setText("Tên Bàn: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 12, -1, 20));

        jLabel3.setText("Tên nhân viên: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 42, -1, 19));

        nameOfTbale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameOfTbaleActionPerformed(evt);
            }
        });
        getContentPane().add(nameOfTbale, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 12, 240, -1));

        nameOfEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameOfEmployeeActionPerformed(evt);
            }
        });
        getContentPane().add(nameOfEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 41, 240, -1));

        jLabel4.setText("Thời gian bắt đầu:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 114, 30));

        jLabel5.setText("Thời gian hiện tại: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 40, 106, 20));

        refreshButton.setText("Làm mới hóa đơn");
        getContentPane().add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 40, 140, -1));

        noteButton.setText("Ghi chú");
        noteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(noteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, 140, -1));

        timeStart.setEditable(false);
        getContentPane().add(timeStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 200, -1));

        timeNow.setEditable(false);
        getContentPane().add(timeNow, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 40, 200, -1));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("GHI CHÚ:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 66, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 32, 272, 107));

        jButton3.setText("Cập nhật");
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, -1));

        jButton4.setText("Xóa");
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 150, 65, -1));

        jLabel12.setText("THANH TOÁN:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 88, -1));

        jLabel13.setText("Tổng tiền: ");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 32, -1, -1));

        totalMoneyText.setEditable(false);
        totalMoneyText.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jPanel2.add(totalMoneyText, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 22, 335, 30));

        jLabel14.setText("Giảm giá :");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 73, -1, -1));

        discountText.setText("0");
        discountText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountTextKeyReleased(evt);
            }
        });
        jPanel2.add(discountText, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 60, 335, 30));

        jLabel15.setText("Tổng thanh toán :");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 114, -1, -1));

        payments.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jPanel2.add(payments, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 98, 343, 30));

        paymentsButton.setText("In hóa đơn và thanh toán");
        paymentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentsButtonActionPerformed(evt);
            }
        });
        jPanel2.add(paymentsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 149, 343, -1));

        jLabel9.setText("      ");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 570, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, 790, 200));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable3);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 780, 310));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employeePackage/icons8-search-16.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 40, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteButtonActionPerformed
        
        //nameOfProductChoose = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
        noteTable.notetable();
        // TODO add your handling code here:
    }//GEN-LAST:event_noteButtonActionPerformed

    private void nameOfTbaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameOfTbaleActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_nameOfTbaleActionPerformed

    private void nameOfEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameOfEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameOfEmployeeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
loadProductInTable();        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        orderAdd = null;
        String productcode = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
        String productname = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 1);
        int price =  (int) jTable1.getValueAt(jTable1.getSelectedRow(), 2);
        orderAdd = new order(EmployeeTask.ordercodeString, productcode, productname, 0, price);
        ep = new enternumberProduct();
        ep.main();
      // ep.setVisible(true);
      //  System.out.println(EmployeeTask.orderList.get(0).ordercode+ productcode+ productname+ price);
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void paymentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentsButtonActionPerformed
        payments(EmployeeTask.ordercodeString);        // TODO add your handling code here:
    }//GEN-LAST:event_paymentsButtonActionPerformed

    private void findTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTextActionPerformed
       
        // TODO add your handling code here:
    }//GEN-LAST:event_findTextActionPerformed

    private void findTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findTextKeyReleased
 ArrayList<products> productTempt = new ArrayList<>();
 DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
 model.getDataVector().removeAllElements();
         productTempt.clear();
 if(jComboBox1.getSelectedItem().toString().compareTo("Hoa Quả")==0){
        for(int i=0; i<productsList.size(); i++){
            if(productsList.get(i).productLine.compareTo("Hoa Quả")==0 && productsList.get(i).productName.contains(findText.getText())){
            productTempt.add(new products(productsList.get(i).productCode, productsList.get(i).productName,productsList.get(i).productLine, productsList.get(i).price));
            }
        }
 }
 else if(jComboBox1.getSelectedItem().toString().compareTo("Đồ Uống")==0){
      for(int i=0; i<productsList.size(); i++){
            if(productsList.get(i).productLine.compareTo("Đồ Uống")==0 && productsList.get(i).productName.contains(findText.getText())){
            productTempt.add(new products(productsList.get(i).productCode, productsList.get(i).productName,productsList.get(i).productLine, productsList.get(i).price));
            }
        }
 }
 else{
      for(int i=0; i<productsList.size(); i++){
            if(productsList.get(i).productName.contains(findText.getText())){
            productTempt.add(new products(productsList.get(i).productCode, productsList.get(i).productName,productsList.get(i).productLine, productsList.get(i).price));
            }
        }
 }
 
    for(int i=0; i<productTempt.size(); i++){
        model.addRow(new Object[] {
            productTempt.get(i).productCode, productTempt.get(i).productName, productTempt.get(i).price
        
        });
    }
 
     
                      // TODO add your handling code here:
    }//GEN-LAST:event_findTextKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ArrayList<products> productTempt = new ArrayList<>();
 DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
 model.getDataVector().removeAllElements();
         productTempt.clear();
 if(jComboBox1.getSelectedItem().toString().compareTo("Hoa Quả")==0){
        for(int i=0; i<productsList.size(); i++){
            if(productsList.get(i).productLine.compareTo("Hoa Quả")==0 && productsList.get(i).productName.contains(findText.getText())){
            productTempt.add(new products(productsList.get(i).productCode, productsList.get(i).productName,productsList.get(i).productLine, productsList.get(i).price));
            }
        }
 }
 else if(jComboBox1.getSelectedItem().toString().compareTo("Đồ Uống")==0){
      for(int i=0; i<productsList.size(); i++){
            if(productsList.get(i).productLine.compareTo("Đồ Uống")==0 && productsList.get(i).productName.contains(findText.getText())){
            productTempt.add(new products(productsList.get(i).productCode, productsList.get(i).productName,productsList.get(i).productLine, productsList.get(i).price));
            }
        }
 }
 else{
      for(int i=0; i<productsList.size(); i++){
            if(productsList.get(i).productName.contains(findText.getText())){
            productTempt.add(new products(productsList.get(i).productCode, productsList.get(i).productName,productsList.get(i).productLine, productsList.get(i).price));
            }
        }
 }
 
    for(int i=0; i<productTempt.size(); i++){
        model.addRow(new Object[] {
            productTempt.get(i).productCode, productTempt.get(i).productName, productTempt.get(i).price
        
        });
    }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void discountTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountTextKeyReleased
        if(discountText.getText().compareTo("")!=0){
        payments.setText(String.valueOf(amount - amount* (Float.valueOf(discountText.getText())/100)));}
    }//GEN-LAST:event_discountTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void i() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inforTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inforTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inforTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inforTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             new inforTable().setVisible(true);
            }
        });
      
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField discountText;
    private javax.swing.JTextField findText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nameOfEmployee;
    private javax.swing.JTextField nameOfTbale;
    private javax.swing.JButton noteButton;
    public static javax.swing.JTextField payments;
    private javax.swing.JButton paymentsButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField timeNow;
    private javax.swing.JTextField timeStart;
    public static javax.swing.JTextField totalMoneyText;
    // End of variables declaration//GEN-END:variables
public static String getStartDate(){
    java.util.Date date = new java.util.Date();
            DateFormat df = new SimpleDateFormat("hh:mm:ss  EEEE ,dd/MM/yyyy");
	    String time = df.format(date);
           return time;
}
public void loadProductInTable(){

 productsList = new ArrayList<>();
 productsList.clear();
      DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        try{
           Class.forName("com.mysql.jdbc.Driver");
           Connection con = DriverManager.getConnection(Main.url, Main.usernameSQL, Main.passwordSQL);
            PreparedStatement pr = con.prepareStatement("SELECT* from products");
            ResultSet rs = pr.executeQuery();
            while (rs.next()) {                
                products p = new products();
                p.setProductCode(rs.getString(1));
                p.setProductName(rs.getString(2));
                p.setProductLine(rs.getString(3));
                p.setPrice(rs.getInt(4));
                productsList.add(p);
            }
            con.close();
        
        } catch(Exception e){
            e.printStackTrace();
        }
        
         model.getDataVector().removeAllElements();
       
                for(int i=0; i<productsList.size(); i++){
          model.addRow( new Object[]{
            productsList.get(i).productCode, productsList.get(i).productName, productsList.get(i).price
          
      } );
          
      } 
       
      
        
        if(jComboBox1.getSelectedItem().toString().compareTo("Hoa Quả")==0&&findText.getText().compareTo("")==0){
          model.getDataVector().removeAllElements();
          for(int i=0; i<productsList.size(); i++){
              if(productsList.get(i).productLine.compareTo("Hoa Quả")==0){
                  model.addRow(new Object[]{
                    productsList.get(i).productCode  ,productsList.get(i).productName, productsList.get(i).price
                  
                  });
            
              }
          }
       }
        else if(jComboBox1.getSelectedItem().toString().compareTo("Đồ Uống")==0&&findText.getText().compareTo("")==0){
              model.getDataVector().removeAllElements();
           for(int i=0; i<productsList.size(); i++){
              if(productsList.get(i).productLine.compareTo("Đồ Uống")==0){
                  model.addRow(new Object[]{
                     productsList.get(i).productCode  ,productsList.get(i).productName, productsList.get(i).price
                  
                  });
            
              }
          }
       }
        


}
public static void loadDataInBill() {
     amount =0;
    if(EmployeeTask.orderList.size()>0){
     for(int i=0; i< EmployeeTask.orderList.size(); i++){
     System.out.print( i+1+EmployeeTask.orderList.get(i).productcode+EmployeeTask.orderList.get(i).nameProducts+ EmployeeTask.orderList.get(i).number+ EmployeeTask.orderList.get(i).pricecode);
      amount= amount +EmployeeTask.orderList.get(i).number* EmployeeTask.orderList.get(i).pricecode;
     }
    DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
    model.getDataVector().removeAllElements();
    for(int i=0; i< EmployeeTask.orderList.size(); i++){
        model.addRow(new Object[]{
           i+1, EmployeeTask.orderList.get(i).productcode, EmployeeTask.orderList.get(i).nameProducts, EmployeeTask.orderList.get(i).number, EmployeeTask.orderList.get(i).pricecode
                
        });
    }

}
        totalMoneyText.setText(String.valueOf(amount));
        if(discountText.getText().compareTo("")!=0){
        payments.setText(String.valueOf(amount - amount* (Float.valueOf(discountText.getText())/100)));}
        
}

// khi nhan in hoa don va thanh toan
public void payments(String ordercode){
    System.out.println("DDaay la ordercode tu cho thanh toan"+ ordercode);
    try{
    Class.forName("com.mysql.jdbc.Driver");
           Connection con = DriverManager.getConnection(Main.url, Main.usernameSQL, Main.passwordSQL);
            PreparedStatement pr = con.prepareStatement("SELECT * FROM `order` WHERE `ordercode`=?");
            pr.setString(1, ordercode);
            ResultSet rs = pr.executeQuery(); 
            if(rs.next()){
                idTable = rs.getInt(2);
                PreparedStatement pr1 = con.prepareStatement("UPDATE `order` SET `discount`=?,`status`=? WHERE `ordercode`=?");
                pr1.setInt(1,Integer.valueOf( discountText.getText()));
                pr1.setString(2, "Đã Thanh Toán");
                pr1.setString(3, ordercode);
                 pr1.execute();
                 
                 String sql = "update desk set status = ? WHERE desknumber =?";
         PreparedStatement stm = con.prepareStatement(sql);
           stm.setString(1,"Sẵn Sàng" );
         stm.setInt(2, idTable );
        stm.execute();
        EmployeeTask.loaddataInTable();
                 
                 
               
            }
    
    }
    catch(Exception e){
        e.printStackTrace();
    }


}
public void clock(){
    Thread clock = new Thread(){
        public void run(){
            try{
        while (true) {            
            java.util.Date date = new java.util.Date();
            DateFormat df = new SimpleDateFormat("hh:mm:ss  EEEE ,dd/MM/yyyy");
	    String time = df.format(date);
            timeNow.setText(time);
            
        }
    
    }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    };clock.start();
    
} 


}
